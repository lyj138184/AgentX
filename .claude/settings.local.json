{
  "permissions": {
    "allow": [
      "Bash(git checkout:*)",
      "Bash(./mvn:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(mvn clean:*)",
      "Bash(npm run build:*)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(mv:*)",
      "Bash(git filter-branch:*)",
      "Bash(chmod:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --force --tree-filter '\nif [ -f AgentX/src/main/resources/application.yml ]; then\n    sed -i.bak \"s/app-key: \\${SSO_COMMUNITY_APP_KEY:0a20f78c4cd922b8bf36843dd8123ba9}/app-key: \\${SSO_COMMUNITY_APP_KEY:}/g\" AgentX/src/main/resources/application.yml\n    sed -i.bak \"s/app-secret: \\${SSO_COMMUNITY_APP_SECRET:a16d7e161d75de63d9e9530c90581b915541ec00a4e8d365486c798e37db3533}/app-secret: \\${SSO_COMMUNITY_APP_SECRET:}/g\" AgentX/src/main/resources/application.yml\n    rm -f AgentX/src/main/resources/application.yml.bak\nfi\n' -- c849fc7 9420b3d)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --force --tree-filter '\nif [ -f AgentX/src/main/resources/application.yml ]; then\n    sed -i.bak \"s/0a20f78c4cd922b8bf36843dd8123ba9//g\" AgentX/src/main/resources/application.yml\n    sed -i.bak \"s/a16d7e161d75de63d9e9530c90581b915541ec00a4e8d365486c798e37db3533//g\" AgentX/src/main/resources/application.yml\n    rm -f AgentX/src/main/resources/application.yml.bak\nfi\n' -- 82b6961..HEAD)",
      "Bash(git push:*)",
      "Bash(git gc:*)",
      "Bash(npm run lint)",
      "Bash(npm run dev:*)",
      "Bash(pkill:*)",
      "Bash(curl:*)",
      "Bash(git fetch:*)",
      "Bash(git merge-base:*)",
      "Bash(git reset)",
      "Bash(git reset:*)",
      "Bash(bash:*)",
      "Bash(git merge:*)",
      "Bash(echo:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(git log:*)",
      "Bash(mkdir:*)",
      "Bash(git pull:*)",
      "Bash(sed:*)",
      "Bash(rg:*)",
      "Bash(docker inspect:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(cp:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp:*)",
      "Bash(env)",
      "Bash(npx @modelcontextprotocol/server-postgres:*)",
      "mcp__postgres-server__query",
      "Bash(npm install:*)",
      "Bash(wc:*)",
      "Bash(head:*)"
    ],
    "deny": []
  }
}